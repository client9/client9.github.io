<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Webdev on Nick Galbreath</title><link>https://www.client9.com/tags/webdev/</link><description>Recent content in Webdev on Nick Galbreath</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2018 Nick Galbreath</copyright><lastBuildDate>Tue, 01 May 2018 00:29:00 +0000</lastBuildDate><atom:link href="https://www.client9.com/tags/webdev/index.xml" rel="self" type="application/rss+xml"/><item><title>How to use Data URLs for Image Icons with Hugo</title><link>https://www.client9.com/how-to-use-data-urls-for-image-icons-with-hugo/</link><pubDate>Tue, 01 May 2018 00:29:00 +0000</pubDate><guid>https://www.client9.com/how-to-use-data-urls-for-image-icons-with-hugo/</guid><description>Many times a site needs an image icon. They are commonly used once per page, in the header or footer, are small -- under 128x128 pixels and a few kilobytes. Using a network call, either back to the site, or another site (often a social media site) has a number of problems:
loading requires a network round trip which is slow and possibly render blocking can cause the image to flash-in later, which is annoying requires fooling around with cache header settings, and debatable how much caching helps in this case Instead of a network call consider embedding the image into the page itself using a data url.</description></item><item><title>Using Font Awesome Icons in Hugo</title><link>https://www.client9.com/using-font-awesome-icons-in-hugo/</link><pubDate>Fri, 13 Apr 2018 05:23:08 +0000</pubDate><guid>https://www.client9.com/using-font-awesome-icons-in-hugo/</guid><description>Icons are now essential for websites. According to Font Awesome, it’s icons are used in 100M websites. Traditional methods for using icons can involve loading a web font, a sprite, or script. That’s a lot of work if you need a single icon or two in the nav. With Hugo we can preload the SVG icons, and inject them into our page with partial template or shortcode, skipping the network. The example will use Font Awesome, but the technique will work many other icon systems.</description></item><item><title>Designing HTML for Safari Reader Mode</title><link>https://www.client9.com/designing-html-for-safari-reader-mode/</link><pubDate>Tue, 10 Apr 2018 17:14:56 +0000</pubDate><guid>https://www.client9.com/designing-html-for-safari-reader-mode/</guid><description>For whatever reason, Apple doesn’t provide any guidance on how to design for Safari Reader Mode . Maybe they want the right to change it at any time or maybe it’s to prevent abuse and advertising sneaking in. Likewise, it’s near impossible to find any third-party guidance on how to structure your HTML. It’s mostly guessing, checking reader mode, editing HTML, reloading until it works. But after looking at the Reader javascript source code, and a lot of View Source on numerous publications, I’ve come up with some rules on how to structure HTML to optimize for Reader.</description></item><item><title>CSS Color Dingbats</title><link>https://www.client9.com/css-color-dingbats/</link><pubDate>Fri, 06 Apr 2018 05:52:50 +0000</pubDate><guid>https://www.client9.com/css-color-dingbats/</guid><description>Before emoji, there were dingbats. In the CSS Color Emoji, you may see some of the glyphs render in black-and-white. These are the old dingbats and sometimes font stacks render them before the color emoji fonts are used. This is especially true for macOS and linux. For iOS and Windows, rendering seems to default to color and everything works correctly. It can vary depending on your font stack, the browser, and the OS and it’s only a few characters that are affected.</description></item><item><title>CSS Color Emoji Stack</title><link>https://www.client9.com/css-color-emoji-stack/</link><pubDate>Wed, 04 Apr 2018 07:20:37 +0000</pubDate><guid>https://www.client9.com/css-color-emoji-stack/</guid><description>As part of a solid cross-platform system stack is emoji rendering. As mentioned in CSS System Fonts for Linux 2018, Ubuntu 18.04 and Fedora 28 gain color emoji support. While most platforms now render emoji by default, the results are often inconsistent. Most emoji will be in color, but perhaps not the system emoji, and some emoji by default will render in monochrome versions. To help resolve these issues, color emoji fonts must be explicitly added to make them render correctly.</description></item><item><title>CSS System Fonts on Linux 2018</title><link>https://www.client9.com/css-system-fonts-on-linux-2018/</link><pubDate>Thu, 29 Mar 2018 19:40:48 +0000</pubDate><guid>https://www.client9.com/css-system-fonts-on-linux-2018/</guid><description>I’ve been working on CSS native font stacks as way of delivering the best reading experience in the shortest amount of page-load time. Apple and Windows are mostly straightforward. But what about Linux? To find out, I fired up the default desktop versions of:
Fedora 28 (pre-release) Ubuntu 18.04 (pre-release) Mint Linux 18.3 Elementary.io (early 2018) and the ran the following and analyzed the results.
fc-list -f &amp;#39;%{family[0]}\n&amp;#39; | sort -u What’s Installed These generic fonts were installed on all systems:</description></item><item><title>CSS Georgia Font Stack with Tabular Numbers</title><link>https://www.client9.com/css-georgia-font-stack-with-tabular-numbers/</link><pubDate>Thu, 29 Mar 2018 19:32:29 +0000</pubDate><guid>https://www.client9.com/css-georgia-font-stack-with-tabular-numbers/</guid><description>Georgia is used as both a primary and fallback typeface in many CSS stacks, as it is available on nearly all macOS and Windows machines. However, by default Georgia uses “old style, proportional numbers” or “text figures.” That is, the numbers have different widths so they don’t align well in tables, and different vertical size and alignment. Many (most?) other typefaces use “tabular, lining numbers” with similar horizontal size and vertical alignment.</description></item><item><title>Styling Computer Source Code</title><link>https://www.client9.com/styling-computer-source-code/</link><pubDate>Sat, 17 Mar 2018 16:24:26 +0000</pubDate><guid>https://www.client9.com/styling-computer-source-code/</guid><description>Format your code No matter how nicely you style the code, it won&amp;#39;t matter if the code looks sloppy. Make sure it uses a consistent indentation style and is flush-left.
Make sure your &amp;#34;smart punctuation&amp;#34; is smart Many blog engines rewrite content to improve typography: smart quotes, changing dash to a Unicode minus-sign, etc. This looks great in normal prose, but make sure it&amp;#39;s not doing this to code blocks. If someone cut and pastes your code, it won&amp;#39;t work.</description></item><item><title>CSS System Font Stack Monospace v2</title><link>https://www.client9.com/css-system-font-stack-monospace-v2/</link><pubDate>Sat, 24 Feb 2018 21:50:56 +0000</pubDate><guid>https://www.client9.com/css-system-font-stack-monospace-v2/</guid><description>What is this? For most systems the default monospace font is something horrible like Courier. This can easily improved by using an installed system font, that also avoids the overhead and hacks of using a web-font.
This an update to the original Monospace V1 article.
What’s Changed? Since that first article, GitHub.com has been using a monospace system font stack for at least six months. Given the their focus on computer code and that GitHub is the 64th largest site on the Internet means they should know what a good monospace stack is.</description></item><item><title>CSS System Font Stack Sans Serif v3</title><link>https://www.client9.com/css-system-font-stack-sans-serif-v3/</link><pubDate>Sat, 24 Feb 2018 21:09:07 +0000</pubDate><guid>https://www.client9.com/css-system-font-stack-sans-serif-v3/</guid><description>What is this? This attempts to create a CSS Font Stack that matches what the client’s OS uses for text. The benefits are for both performance and design. Performance is improved since no web-font needs to be loaded or and there is no need for various hacks to prevent text flashing. Design is improved (or at least acceptable) since the font matches what is already being used across the computer, and the latest system fonts are very good compared to the sans-serif defaults.</description></item><item><title>CSS System Font Stack Sans Serif v2</title><link>https://www.client9.com/css-system-font-stack-sans-serif-v2/</link><pubDate>Mon, 13 Nov 2017 00:00:00 +0000</pubDate><guid>https://www.client9.com/css-system-font-stack-sans-serif-v2/</guid><description>This is an update to the original native font stack article. It attempts to use the sans serif font used by operating system for user interfaces. This is best for buttons and other UI elements on the page, but it also works for body text.
What&amp;#39;s Changed? The W3C CSS Fonts 4 draft now includes a built-in font system-ui. It should render using the native sans-serif font. It&amp;#39;s implemented in:</description></item><item><title>Copying GitHub Markdown Style</title><link>https://www.client9.com/copying-github-markdown-style/</link><pubDate>Mon, 08 May 2017 00:00:00 +0000</pubDate><guid>https://www.client9.com/copying-github-markdown-style/</guid><description>For many, the clean look of Github pages, issues and comments defines how markdown should be rendered. Here’s a few ways of getting the same look in your projects.
sindresorhus/github-markdown-css Sindre Sorhus made a site that covers everything about GitHub-flavored markdown. The CSS to replicate the GitHub style can be found at the matching GitHub repository.
shurcool/github-flavored-markdown Dmitri Shuralyov wrote shurcool/github-flavored-markdown as a extension to the Black Friday markdown processor. It takes markdown and turns it into HTML that should be identical to what GitHub produces.</description></item><item><title>CSS System Font Stack Monospace v1</title><link>https://www.client9.com/css-system-font-stack-monospace-v1/</link><pubDate>Sun, 09 Apr 2017 00:00:00 +0000</pubDate><guid>https://www.client9.com/css-system-font-stack-monospace-v1/</guid><description>Right now, most browsers use something like Courier for their default monospace font. This isn&amp;#39;t very useful and not acceptable for code or programming samples.
Fortunately, it’s not hard to create a CSS-based system font stack with great monospace fonts. This expands on the work in System Shock Mono that originally described making a monospace CSS system font stack.
CSS Below is a high-quality, monospace stack, that works on most modern (last eight years) systems.</description></item><item><title>CSS System Font Stack Sans Serif v1</title><link>https://www.client9.com/css-system-font-stack-sans-serif-v1/</link><pubDate>Sun, 09 Apr 2017 00:00:00 +0000</pubDate><guid>https://www.client9.com/css-system-font-stack-sans-serif-v1/</guid><description>This is best for buttons and other UI elements on the page, but it also works for body text.
The CSS /* 1: Safari/Mac special, BlinkMac is the current * Chrome method for using the macOS system font * 2: Recent windows * 3: Older Macs, * 4: system default, */ font-family: /* 1 */ -apple-system, BlinkMacSystemFont, /* 2 */ &amp;#34;Segoe UI&amp;#34;, /* 3 */ Helvetica Neue, /* 4 */ sans-serif; This is what it looks like on your browser:</description></item><item><title>CSS System Font Stack Serif Charter v1</title><link>https://www.client9.com/css-system-font-stack-serif-charter-v1/</link><pubDate>Sun, 09 Apr 2017 00:00:00 +0000</pubDate><guid>https://www.client9.com/css-system-font-stack-serif-charter-v1/</guid><description>It was originally designed in 1987 for print. In 1987 that meant 300 dpi laser printers. That&amp;#39;s very close to what we call retina or HiDPI for screens today. They are not exactly the same but Charter holds up well on today&amp;#39;s screens.
MacOS and iOS now make Charter available as a system font, so it&amp;#39;s great choice. It&amp;#39;s also a free font, and so likely installed on many linux and Windows systems as well.</description></item><item><title>CSS System Font Stack Serif Large v1</title><link>https://www.client9.com/css-system-font-stack-serif-large-v1/</link><pubDate>Sun, 09 Apr 2017 00:00:00 +0000</pubDate><guid>https://www.client9.com/css-system-font-stack-serif-large-v1/</guid><description>The large serif font stack uses a number of more-styled serif system fonts that also have a larger size. While this can be used as body text, they might be best at larger sizes for headlines.
All fonts in this stack use old style, proportional numbers making them inappropriate for numeric tables.
CSS font-family: /* 1 */ &amp;#34;Hoefler Text&amp;#34;, /* 2 */ Constantia, /* 3 */ Georgia, /* 4 */ serif; This is what it looks like on your browser:</description></item><item><title>CSS System Font Stack Serif Medium v1</title><link>https://www.client9.com/css-system-font-stack-serif-medium-v1/</link><pubDate>Sun, 09 Apr 2017 00:00:00 +0000</pubDate><guid>https://www.client9.com/css-system-font-stack-serif-medium-v1/</guid><description>This system font stack is of a medium size, and suitable for body text and larger headlines. The primary fonts are based on variations of Palatino that are similar in size and use similar numeric forms.
Mac users get a nice upgrade from Palatino using Iowan Old Style. For Windows users there is no obvious alternate.
For linux and other systems, I let it fall to the default `serif` as it&amp;#39;s unclear what the right thing to is.</description></item><item><title>CSS System Font Stack Serif Small v1</title><link>https://www.client9.com/css-system-font-stack-serif-small-v1/</link><pubDate>Sun, 09 Apr 2017 00:00:00 +0000</pubDate><guid>https://www.client9.com/css-system-font-stack-serif-small-v1/</guid><description>This system stack is upgrade of the traditional serif font Times New Roman. The Mac and Windows alternates are dense and screen optimized.
The CSS font-family: /* 1 */ Athelas, /* 2 */ Cambria, /* 3 */ serif; This is what it looks like on your browser:
THE QUICK BROWN FOX JUMPED OVER THE LAZY DOG.
The quick brown fox jumped over the lazy dog.
0123456789
11111.11
88888.88
0Oo il1I! Z2z 8$s5S😺&amp;#x203c;&amp;#x270f;&amp;#x26a0;&amp;#x1F62D;&amp;#x2934;&amp;#x2935; The Fonts If font below is not available on your system, it will be rendered in a monospace font.</description></item></channel></rss>