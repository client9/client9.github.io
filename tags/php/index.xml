<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Php on Nick Galbreath</title><link>https://www.client9.com/tags/php/</link><description>Recent content in Php on Nick Galbreath</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2018 Nick Galbreath</copyright><lastBuildDate>Fri, 10 Aug 2012 00:00:00 +0000</lastBuildDate><atom:link href="https://www.client9.com/tags/php/index.xml" rel="self" type="application/rss+xml"/><item><title>PHP Static Analysis 2012</title><link>https://www.client9.com/php-static-analysis-2012/</link><pubDate>Fri, 10 Aug 2012 00:00:00 +0000</pubDate><guid>https://www.client9.com/php-static-analysis-2012/</guid><description>Over at the Code as Craft blog by Etsy on how static analysis for PHP was done. Here’s the intro:
At Etsy we have three tiers of static analysis on our PHP code that run on every commit or runs periodically every hour. They form an important part of our continuous deployment pipeline along with one-button deploys, fast unit and functional tests, copious amounts of graphing, and a fantastic development environment to make sure code flows safely and securely to production.</description></item><item><title>Better Random Numbers in PHP using /dev/urandom</title><link>https://www.client9.com/better-random-numbers-in-php-using-dev-urandom/</link><pubDate>Thu, 19 Jul 2012 00:00:00 +0000</pubDate><guid>https://www.client9.com/better-random-numbers-in-php-using-dev-urandom/</guid><description>First posted in the Code as Craft blog. Here’s the intro:
The design of PHP’s basic random number generators rand and it’s newer variant mt_rand is based off the C Standard Library. For better or worse, both use a single global state and this can be reset using stand (or mt_srand). This means anyone (a developer, a third party module, a library) could set the state to a fixed value and every random number following will be the same for every request.</description></item><item><title>Time Tested PHP: Advanced Testing Techniques with libtimemachine</title><link>https://www.client9.com/time-tested-php-advanced-testing-techniques-with-libtimemachine/</link><pubDate>Thu, 19 Jul 2012 00:00:00 +0000</pubDate><guid>https://www.client9.com/time-tested-php-advanced-testing-techniques-with-libtimemachine/</guid><description/></item><item><title>Robots, Graphs and Binary Search</title><link>https://www.client9.com/robots-graphs-and-binary-search/</link><pubDate>Thu, 24 May 2012 00:00:00 +0000</pubDate><guid>https://www.client9.com/robots-graphs-and-binary-search/</guid><description>Over at the Code as Craft blog by Etsy is a new article on detecting and monitoring robotic traffic and the use of a IP categorization database. Here’s the intro:
We love our human customers. That said we get a lot of traffic from robots too. This is great, especially when they use the Etsy API. However, they sometimes misbehave. And they misbehave frequently in the late hours, not unlike a legendary East Village nightclub.</description></item><item><title>Static Analysis for PHP</title><link>https://www.client9.com/static-analysis-for-php/</link><pubDate>Sat, 19 May 2012 00:00:00 +0000</pubDate><guid>https://www.client9.com/static-analysis-for-php/</guid><description>Also checkout the matching Code as Craft article on static analysis for PHP.</description></item><item><title>Google Safe Browsing without the Browser</title><link>https://www.client9.com/google-safe-browsing-without-the-browser/</link><pubDate>Sun, 04 Mar 2012 00:00:00 +0000</pubDate><guid>https://www.client9.com/google-safe-browsing-without-the-browser/</guid><description>Over at Etsy&amp;#39;s Code as Craft blog is a new article on using the Google Safe Browsing API to analyze user generated content for malware links on the server. Here’s the intro to the story:
At Etsy, we are constantly evaluating the security and safety of our members as they use the site. One way we do this is by analyzing user generated content (UGC) for possible problems. As part of the process we integrate results from the Google Safe Browsing (GSB) service.</description></item></channel></rss>