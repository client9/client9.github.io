<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Buildops on Nick Galbreath</title><link>https://www.client9.com/tags/buildops/</link><description>Recent content in Buildops on Nick Galbreath</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2018 Nick Galbreath</copyright><lastBuildDate>Mon, 23 Oct 2017 00:51:25 +0000</lastBuildDate><atom:link href="https://www.client9.com/tags/buildops/index.xml" rel="self" type="application/rss+xml"/><item><title>Debian: find packages without reverse dependencies</title><link>https://www.client9.com/debian-find-packages-without-reverse-dependencies/</link><pubDate>Mon, 23 Oct 2017 00:51:25 +0000</pubDate><guid>https://www.client9.com/debian-find-packages-without-reverse-dependencies/</guid><description>When trying to make minimal OS, one wants to get rid of as many non-critical packages as possible. Under Debian, apt-cache rdepends --installed on a given package shows the reverse dependencies, or a list of other packages that depends on it.
The bash script below scans all installed packages and emits a list of packages without any reverse dependencies.
Packages without any reverse dependencies could be one of three things:</description></item><item><title>Static Analysis for Bash and Shell Scripts</title><link>https://www.client9.com/static-analysis-for-bash-and-shell-scripts/</link><pubDate>Sun, 28 May 2017 00:00:00 +0000</pubDate><guid>https://www.client9.com/static-analysis-for-bash-and-shell-scripts/</guid><description>If you must write shellcode, use the same techniques you use for your primary programming language and use:
static analysis a standard style guide or format a standard library In fact, given how weird shellcode is, it probably needs these tools even more than your regular languages. Fortunately these tools now exist for shell.
shellcheck shellcheck provides static analysis of shell scripts and covers an number of different dialects of shell.</description></item><item><title>Using macOS Homebrew to Install a Specific Version</title><link>https://www.client9.com/using-macos-homebrew-to-install-a-specific-version/</link><pubDate>Tue, 02 May 2017 00:00:00 +0000</pubDate><guid>https://www.client9.com/using-macos-homebrew-to-install-a-specific-version/</guid><description>Here&amp;#39;s how to install a specific version of a package on macOS using homebrew. While the process isn&amp;#39;t automatic, it&amp;#39;s also not hard and provides stability.
Why Isn&amp;#39;t This Functionality Built-In? Homebrew used to provide this functionality. If you do search you&amp;#39;ll probably find one these methods that no longer works. My guess is the team behind Homebrew removed the functionality since it never worked very well, at scale.
In most Linux distributions, formulas are in separate repositories and can change multiple times before being released with a manual process.</description></item></channel></rss>